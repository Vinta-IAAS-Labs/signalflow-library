KIND_FILTER = filter('kind', 'CONSUMER') or filter('kind', 'SERVER')
V2_KIND_FILTER = filter('sf_kind', 'CONSUMER') or filter('sf_kind',
                                                         'SERVER')  # added for completeness

EXCLUDE_CUSTOM_DIMS_FILTER = not filter('sf_dimensionalized', 'true')

ERROR_TRUE = filter('error', 'true')
ERROR_FALSE = filter('error', 'false')

V2_ERROR_TRUE = filter('sf_error', 'true')
V2_ERROR_FALSE = filter('sf_error', 'false')

EXCLUDE_ERRORS_FILTER = not ERROR_TRUE
V2_EXCLUDE_ERRORS_FILTER = not V2_ERROR_TRUE

DEFAULT_GROUPBY = ['cluster', 'service', 'operation', 'httpMethod', 'kind']
V2_DEFAULT_GROUPBY = ['sf_environment', 'sf_service', 'sf_operation', 'sf_httpMethod', 'sf_kind']

DEFAULT_ALLOW_MISSING = ['cluster', 'service', 'operation', 'httpMethod', 'kind']
V2_DEFAULT_ALLOW_MISSING = ['sf_environment', 'sf_service', 'sf_operation', 'sf_httpMethod', 'sf_kind']

PCTILE_TO_METRIC = {50: 'spans.duration.ns.median',
                    90: 'spans.duration.ns.p90',
                    99: 'spans.duration.ns.p99'}


def merge_filters(filter_, exclude_errors, use_kind_filter=True, custom_filter=None,
                  kind_filter=KIND_FILTER, exclude_errors_filter=EXCLUDE_ERRORS_FILTER):
    if custom_filter is None:
        if filter_ is not None:
            if exclude_errors is True:
                if use_kind_filter is True:
                    return filter_ and exclude_errors_filter and kind_filter and EXCLUDE_CUSTOM_DIMS_FILTER
                else:
                    return filter_ and exclude_errors_filter and EXCLUDE_CUSTOM_DIMS_FILTER
            else:
                if use_kind_filter is True:
                    return filter_ and kind_filter and EXCLUDE_CUSTOM_DIMS_FILTER
                else:
                    return filter_ and EXCLUDE_CUSTOM_DIMS_FILTER
        else:
            if exclude_errors is True:
                if use_kind_filter is True:
                    return exclude_errors_filter and kind_filter and EXCLUDE_CUSTOM_DIMS_FILTER
                else:
                    return exclude_errors_filter and EXCLUDE_CUSTOM_DIMS_FILTER
            else:
                if use_kind_filter is True:
                    return kind_filter and EXCLUDE_CUSTOM_DIMS_FILTER
                else:
                    return EXCLUDE_CUSTOM_DIMS_FILTER
    else:
        if filter_ is not None:
            if exclude_errors is True:
                if use_kind_filter is True:
                    return filter_ and exclude_errors_filter and kind_filter and custom_filter
                else:
                    return filter_ and exclude_errors_filter and custom_filter
            else:
                if use_kind_filter is True:
                    return filter_ and kind_filter and custom_filter
                else:
                    return filter_ and custom_filter
        else:
            if exclude_errors is True:
                if use_kind_filter is True:
                    return exclude_errors_filter and kind_filter and custom_filter
                else:
                    return exclude_errors_filter and custom_filter
            else:
                if use_kind_filter is True:
                    return kind_filter and custom_filter
                else:
                    return custom_filter


def merge_group_by_with_default(group_by, default=DEFAULT_GROUPBY):
    if group_by is None:
        return default
    else:
        return default + group_by
